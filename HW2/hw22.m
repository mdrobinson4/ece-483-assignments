clc; close all; clear all;

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: C:\Users\mial2\Desktop\ece483\HW2\datatraining.txt
%
% Auto-generated by MATLAB on 30-Aug-2019 14:03:25

%% Setup the Import Options
opts = delimitedTextImportOptions("NumVariables", 8);

% Specify range and delimiter
opts.DataLines = [1, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["index", "date", "Temperature", "Humidity", "Light", "CO2", "HumidityRatio", "Occupancy"];
opts.VariableTypes = ["double", "datetime", "double", "double", "double", "double", "double", "double"];
opts = setvaropts(opts, 2, "InputFormat", "yyyy-MM-dd HH:mm:ss");
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
datatraining = readtable("C:\Users\mial2\Desktop\ece483\HW2\datatraining.txt", opts);


%% Clear temporary variables
features = opts.VariableNames;
clear opts

datatraining = datatraining(2:end, 3:end);

k = 10;
prev = 1;
datapoints = height(datatraining);
foldindices = []; % represent the start of a new bucket


for i = 1:1 % iterate the classes
    foldindices(1) = 1;
    for fold = 1:1 %iterate each of the k folds
        tp = 0;
        fp = 0;
        tn = 0;
        fn = 0;
        sensitivity =  [];
        speceficity = [];
        for index = 1:k % create the buckets
            if index <= mod(datapoints, k)
                if index == 1
                    foldindices(index) = 1;
                else
                    foldindices(index) = foldindices(index-1) + (floor((datapoints / k)) + 1);
                end
            else
                foldindices(index) = foldindices(index-1) + (floor(datapoints / k));
            end 
        end
        training = datatraining(1:foldindices(k)-1,i);
        occupied = datatraining(1:foldindices(k)-1,end);
        testing = datatraining(foldindices(k):floor(datapoints/k),i);
        for ind = 1:height(training)
            th = training{ind, i};
            for x = 1:height(training)
                if training{x, i} > th
                    if      occupied{x, i}== 1
                        tp = tp + 1;
                    else
                        fp = fp + 1;
                    end
                else
                    if occupied{x, i} == 0
                        tn = tn + 1;
                    else
                        fn = fn + 1;
                    end
                end
            end
            sensitivity(ind) = tp / (tp + fn);
            speceficity(ind) = tn / (tn + fp);
        end

    end
end

speceficity
sensitivity


    